{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["SectionStyle","styled","section","TitleStyle","h2","Section","title","children","ButtonStyle","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","MessageStyle","p","Notification","message","StatisticsListStyle","ul","StatisticsItemStyle","li","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGMA,EAAeC,IAAOC,QAAV,iUAiBZC,EAAaF,IAAOG,GAAV,qFAMD,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACG,cAACG,EAAD,UAAaG,IACbC,KC3BP,IAAMC,EAAcP,IAAOQ,OAAV,qXA8BFC,I,EAAAA,EAbf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,cAACN,EAAD,CAAaO,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAvE,SACGA,GAD6BA,OCnB9BG,EAAehB,IAAOiB,EAAV,4QAoBHC,I,IAAAA,EARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAeG,KCblBC,EAAsBpB,IAAOqB,GAAV,0LAUnBC,EAAsBtB,IAAOuB,GAAV,mTAeV,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAA4BG,KAC5B,eAACH,EAAD,uBAA+BI,KAC/B,eAACJ,EAAD,mBAA2BK,KAC3B,eAACL,EAAD,qBAA6BM,KAC7B,eAACN,EAAD,iCAAyCO,EAAzC,W,MC5BS,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAgCMC,EAAqB,kBAAMV,EAAOC,EAAUC,GAIlD,OACE,qCACE,cAACvB,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBArCpC,SAAAE,GACtB,OAAQA,GACN,IAAK,OACHmB,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAyBF,cAAChC,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzB8B,IACC,cAAC,EAAD,CAAchB,QAAQ,yBAEtB,cAACK,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,mBAjBoCQ,KAAKC,MAAOb,EAAOU,IAAwB,YCxC3FI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fefe57e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst SectionStyle = styled.section`\n  padding: 20px;\n  text-align: center;\n\n  text-align: center;\n  width: 400px;\n  margin: 30px auto;\n\n  border: 1px solid grey;\n  border-radius: 2%;\n\n  font-family: 'Helvetica Neue', Helvetica, Arial;\n  background: white;\n  box-shadow: -1px 15px 30px -12px black;\n  z-index: 9999;\n`;\n\nconst TitleStyle = styled.h2`\n  padding: 10px;\n  font-size: 24px;\n  color: #5c6368;\n`;\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionStyle>\n      {<TitleStyle>{title}</TitleStyle>}\n      {children}\n    </SectionStyle>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ButtonStyle = styled.button`\n  border: 1px solid grey;\n  border-radius: 2%;\n  width: 100px;\n  padding: 5px 15px;\n  background-color: teal;\n  color: #fff;\n  font-weight: 500;\n  margin-left: 5px;\n  margin-right: 5px;\n  font-family: inherit;\n  cursor: pointer;\n  outline: none;\n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n`;\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <ButtonStyle type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\n      {option}\n    </ButtonStyle>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst MessageStyle = styled.p`\n  padding: 20px;\n  margin: 0px auto;\n  background-color: teal;\n  border: 1px solid grey;\n  border-radius: 2%;\n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n  color: white;\n  font-weight: 700;\n`;\n\nfunction Notification({ message }) {\n  return <MessageStyle>{message}</MessageStyle>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StatisticsListStyle = styled.ul`\n  list-style-type: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  color: #5c6368;\n`;\n\nconst StatisticsItemStyle = styled.li`\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  display: flex;\n\n  :nth-last-child(-n + 2) {\n    background-color: teal;\n    color: white;\n    font-weight: 700;\n    box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n    transition: box-shadow 250ms linear;\n  }\n`;\n\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatisticsListStyle>\n      <StatisticsItemStyle>Good: {good}</StatisticsItemStyle>\n      <StatisticsItemStyle>Neutral: {neutral}</StatisticsItemStyle>\n      <StatisticsItemStyle>Bad: {bad}</StatisticsItemStyle>\n      <StatisticsItemStyle>Total: {total}</StatisticsItemStyle>\n      <StatisticsItemStyle>Positive feedback: {positivePercentage} %</StatisticsItemStyle>\n    </StatisticsListStyle>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\nimport './App.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'Good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'Neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'Bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n  // const onLeaveFeedbackGood = () => {\n  //   setGood(prevState => prevState + 1);\n  // };\n\n  // const onLeaveFeedbackNeutral = () => {\n  //   setNeutral(prevState => prevState + 1);\n  // };\n\n  // const onLeaveFeedbackBad = () => {\n  //   setBad(prevState => prevState + 1);\n  // };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => Math.round((good / countTotalFeedback()) * 100);\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={['Good', 'Neutral', 'Bad']} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"There is no feedback\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}